name: build sing-box

permissions:
  contents: write
  discussions: write

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  check-tag:
    runs-on: ubuntu-latest
    outputs:
      tag-exists: ${{ steps.check-tag.outputs.exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: SagerNet/sing-box
          ref: dev-next
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.23
      - name: Get Version
        run: |
          VERSION=$(CGO_ENABLED=0 GOOS=$(go env GOHOSTOS) GOARCH=$(go env GOHOSTARCH) go run ./cmd/internal/read_tag)
          echo "VERSION: $VERSION"
          echo "TAG_NAME=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_NAME=$VERSION" >> $GITHUB_ENV
      - uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with:
          tag: ${{ env.TAG_NAME }}
      - name: Get Output
        run: |
          echo "tag-exists=${{ steps.check-tag.outputs.exists }}"

  cross:
    if: needs.check-tag.outputs.tag-exists == 'false'
    needs: check-tag
    strategy:
      fail-fast: false
      matrix:
        include:
          # linux
          - name: linux-amd64
            goos: linux
            goarch: amd64
            goamd64: v1
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
      TAGS: with_quic,with_grpc,with_dhcp,with_wireguard,with_ech,with_utls,with_reality_server,with_acme,with_clash_api,with_v2ray_api,with_gvisor
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: SagerNet/sing-box
          ref: dev-next

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.23

      - name: Get Version
        run: |
          VERSION=$(CGO_ENABLED=0 GOOS=$(go env GOHOSTOS) GOARCH=$(go env GOHOSTARCH) go run ./cmd/internal/read_tag)
          echo "VERSION: $VERSION"
          echo "TAG_NAME=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_NAME=$VERSION" >> $GITHUB_ENV

      - name: Build
        id: build
        run: make

      - name: Test
        run: |
          echo ${{ contains(matrix.name, 'windows') }}
          echo ${{ matrix.name }}

      - name: Rename Windows
        if: ${{ (contains(matrix.name, 'windows')) }}
        run: mv sing-box* sing-box-${{ matrix.name }}.exe
      - name: Rename
        if: ${{ contains(matrix.name, 'linux') }}
        run: mv sing-box* sing-box-${{ matrix.name }}

      #- name: Upload artifact
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: sing-box-${{ matrix.name }}
      #    path: sing-box*

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.RELEASE_NAME }}
          files: |
            sing-box*
